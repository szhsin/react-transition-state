{"version":3,"sources":["../../dist/index.es.js","components/BasicExample.js","App.js","reportWebVitals.js","index.js"],"names":["STATES","startOrEnd","unmounted","updateState","newState","setState","latestState","timeoutId","clearTimeout","current","BasicExample","useState","unmountOnExit","setUnmountOnExit","enterTimeout","exitTimeout","initialEntered","mountOnEnter","timeout","preEnter","preExit","enter","exit","state","useRef","endTransition","useCallback","transitState","setTimeout","toggle","toEnter","enterStage","useEffect","useTransition","className","type","checked","onChange","e","target","onClick","App","href","title","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f7f9cce.chunk.js","sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\n\nconst PRE_ENTER = 0;\nconst ENTERING = 1;\nconst ENTERED = 2;\nconst PRE_EXIT = 3;\nconst EXITING = 4;\nconst EXITED = 5;\nconst UNMOUNTED = 6;\nconst STATES = ['preEnter', 'entering', 'entered', 'preExit', 'exiting', 'exited', 'unmounted'];\n\nconst startOrEnd = (unmounted) => (unmounted ? UNMOUNTED : EXITED);\n\nconst updateState = (newState, setState, latestState, timeoutId) => {\n  clearTimeout(timeoutId.current);\n  setState(newState);\n  latestState.current = newState;\n};\n\nconst useTransition = ({\n  initialEntered,\n  mountOnEnter,\n  unmountOnExit,\n  timeout,\n  preEnter,\n  preExit,\n  enter = true,\n  exit = true\n} = {}) => {\n  const [state, setState] = useState(initialEntered ? ENTERED : startOrEnd(mountOnEnter));\n  const latestState = useRef(state);\n  const timeoutId = useRef();\n\n  let enterTimeout, exitTimeout;\n  if (typeof timeout === 'object') {\n    enterTimeout = timeout.enter;\n    exitTimeout = timeout.exit;\n  } else {\n    enterTimeout = exitTimeout = timeout;\n  }\n\n  const endTransition = useCallback(() => {\n    let newState;\n    switch (latestState.current) {\n      case PRE_ENTER:\n      case ENTERING:\n        newState = ENTERED;\n        break;\n      case PRE_EXIT:\n      case EXITING:\n        newState = startOrEnd(unmountOnExit);\n        break;\n    }\n\n    if (newState) {\n      updateState(newState, setState, latestState, timeoutId);\n    }\n  }, [unmountOnExit]);\n\n  const transitState = useCallback(\n    (newState) => {\n      updateState(newState, setState, latestState, timeoutId);\n\n      switch (newState) {\n        case PRE_ENTER:\n        case PRE_EXIT:\n          timeoutId.current = setTimeout(() => transitState(newState + 1), 0);\n          break;\n        case ENTERING:\n          if (enterTimeout >= 0) timeoutId.current = setTimeout(endTransition, enterTimeout);\n          break;\n        case EXITING:\n          if (exitTimeout >= 0) timeoutId.current = setTimeout(endTransition, exitTimeout);\n          break;\n      }\n    },\n    [enterTimeout, exitTimeout, endTransition]\n  );\n\n  const toggle = useCallback(\n    (toEnter) => {\n      const enterStage = latestState.current <= ENTERED;\n      if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n\n      if (toEnter) {\n        if (!enterStage) {\n          transitState(enter ? (preEnter ? PRE_ENTER : ENTERING) : ENTERED);\n        }\n      } else {\n        if (enterStage) {\n          transitState(exit ? (preExit ? PRE_EXIT : EXITING) : startOrEnd(unmountOnExit));\n        }\n      }\n    },\n    [enter, exit, preEnter, preExit, unmountOnExit, transitState]\n  );\n\n  useEffect(() => () => clearTimeout(timeoutId.current), []);\n\n  return [STATES[state], toggle, endTransition];\n};\n\nexport { useTransition as default, useTransition };\n","import { useState } from 'react';\nimport useTransition from 'react-transition-state';\n\nfunction BasicExample() {\n  const [unmountOnExit, setUnmountOnExit] = useState(false);\n  const [state, toggle] = useTransition({\n    timeout: 750,\n    initialEntered: true,\n    preEnter: true,\n    unmountOnExit\n  });\n\n  return (\n    <div className=\"basic-example\">\n      <div className=\"basic-console\">\n        <div className=\"basic-state\">state: {state}</div>\n        <label>\n          Unmount after hiding\n          <input\n            type=\"checkbox\"\n            checked={unmountOnExit}\n            onChange={(e) => setUnmountOnExit(e.target.checked)}\n          />\n        </label>\n        <button className=\"btn\" onClick={() => toggle()}>\n          {state === 'entering' || state === 'entered' ? 'Hide' : 'Show'}\n        </button>\n      </div>\n      {state !== 'unmounted' && (\n        <div className={`basic-transition ${state}`}>React transition state</div>\n      )}\n    </div>\n  );\n}\n\nexport default BasicExample;\n","import BasicExample from './components/BasicExample';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <a href=\"https://github.com/szhsin/react-transition-state\" title=\"GitHub\" className=\"github\">\n        <img src=\"GitHub-64.png\" alt=\"GitHub\" />\n      </a>\n      <BasicExample />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}