{"version":3,"sources":["../../dist/index.es.js","components/BasicExample.js","App.js","reportWebVitals.js","index.js"],"names":["STATES","startOrEnd","unmounted","updateState","newState","setState","latestState","timeoutId","clearTimeout","current","BasicExample","useState","unmountOnExit","setUnmountOnExit","enterTimeout","exitTimeout","initialEntered","mountOnEnter","timeout","preState","enter","exit","state","useRef","endTransition","useCallback","transitState","setTimeout","transition","toEnter","enterStage","useEffect","useTransition","toggle","className","type","checked","onChange","e","target","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NASMA,EAAS,CAAC,WAAY,WAAY,UAAW,UAAW,UAAW,SAAU,aAE7EC,EAAa,SAAAC,GAAS,OAAIA,EAHd,EADH,GAMTC,EAAc,SAACC,EAAUC,EAAUC,EAAaC,GACpDC,aAAaD,EAAUE,SACvBJ,EAASD,GACTE,EAAYG,QAAUL,G,OCgBTM,MA7Bf,WACI,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EDckB,WAQX,IAKLC,EAAcC,EALT,yDAAP,GAPFC,EAOS,EAPTA,eACAC,EAMS,EANTA,aACAL,EAKS,EALTA,cACAM,EAIS,EAJTA,QACAC,EAGS,EAHTA,SAGS,IAFTC,aAES,aADTC,YACS,SACT,EAA0BV,mBAASK,EAxBrB,EAwBgDf,EAAWgB,IAAzE,mBAAOK,EAAP,KAAcjB,EAAd,KACMC,EAAciB,iBAAOD,GACrBf,EAAYgB,mBAGK,kBAAZL,GACTJ,EAAeI,EAAQE,MACvBL,EAAcG,EAAQG,MAEtBP,EAAeC,EAAcG,EAG/B,IAAMM,EAAgBC,uBAAY,WAChC,IAAIrB,EACJ,OAAQE,EAAYG,SAClB,KAzCY,EA0CZ,KAzCW,EA0CTL,EAzCQ,EA0CR,MACF,KA1CW,EA2CX,KA1CU,EA2CRA,EAAWH,EAAWW,GAItBR,GACFD,EAAYC,EAAUC,EAAUC,EAAaC,KAE9C,CAACK,IAEEc,EAAeD,uBAAY,SAAArB,GAG/B,OAFAD,EAAYC,EAAUC,EAAUC,EAAaC,GAErCH,GACN,KA5DY,EA6DZ,KA1DW,EA2DTG,EAAUE,QAAUkB,YAAW,kBAAMD,EAAatB,EAAW,KAAI,GACjE,MACF,KA/DW,EAgELU,GAAgB,IAAGP,EAAUE,QAAUkB,WAAWH,EAAeV,IACrE,MACF,KA/DU,EAgEJC,GAAe,IAAGR,EAAUE,QAAUkB,WAAWH,EAAeT,OAGvE,CAACD,EAAcC,EAAaS,IAEzBI,EAAaH,uBAAY,SAAAI,GAC7B,IAAMC,EAAaxB,EAAYG,SAxEnB,EAyEW,mBAAZoB,IAAuBA,GAAWC,GAEzCD,EACGC,GACHJ,EAAaN,EAASD,EA/EZ,EACD,EACD,GAgFNW,GACFJ,EAAaL,EAAQF,EAhFZ,EACD,EA+E8ClB,EAAWW,MAGpE,CAACQ,EAAOC,EAAMF,EAAUP,EAAec,IAI1C,OAFAK,qBAAU,kBAAM,kBAAMvB,aAAaD,EAAUE,YAAU,IAEhD,CAACT,EAAOsB,GAAQM,EAAYJ,GCvFTQ,CAAc,CAClCd,QAAS,IACTF,gBAAgB,EAChBG,UAAU,EACVP,kBAJJ,mBAAOU,EAAP,KAAcW,EAAd,KAOA,OACI,sBAAKC,UAAU,gBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAf,oBAAqCZ,KACrC,yDAEI,uBAAOa,KAAK,WAAWC,QAASxB,EAC5ByB,SAAU,SAAAC,GAAC,OAAIzB,EAAiByB,EAAEC,OAAOH,eAEjD,wBAAQF,UAAU,MAAMM,QAAS,kBAAMP,KAAvC,SACe,aAAVX,GAAkC,YAAVA,EAAsB,OAAS,YAGrD,cAAVA,GACG,qBAAKY,UAAS,2BAAsBZ,GAApC,wC,MCfDmB,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCMSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3b5fa5d9.chunk.js","sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\n\nconst PRE_ENTER = 0;\nconst ENTERING = 1;\nconst ENTERED = 2;\nconst PRE_EXIT = 3;\nconst EXITING = 4;\nconst EXITED = 5;\nconst UNMOUNTED = 6;\nconst STATES = ['preEnter', 'entering', 'entered', 'preExit', 'exiting', 'exited', 'unmounted'];\n\nconst startOrEnd = unmounted => unmounted ? UNMOUNTED : EXITED;\n\nconst updateState = (newState, setState, latestState, timeoutId) => {\n  clearTimeout(timeoutId.current);\n  setState(newState);\n  latestState.current = newState;\n};\n\nconst useTransition = ({\n  initialEntered,\n  mountOnEnter,\n  unmountOnExit,\n  timeout,\n  preState,\n  enter = true,\n  exit = true\n} = {}) => {\n  const [state, setState] = useState(initialEntered ? ENTERED : startOrEnd(mountOnEnter));\n  const latestState = useRef(state);\n  const timeoutId = useRef();\n\n  let enterTimeout, exitTimeout;\n  if (typeof timeout === 'object') {\n    enterTimeout = timeout.enter;\n    exitTimeout = timeout.exit;\n  } else {\n    enterTimeout = exitTimeout = timeout;\n  }\n\n  const endTransition = useCallback(() => {\n    let newState;\n    switch (latestState.current) {\n      case PRE_ENTER:\n      case ENTERING:\n        newState = ENTERED;\n        break;\n      case PRE_EXIT:\n      case EXITING:\n        newState = startOrEnd(unmountOnExit);\n        break;\n    }\n\n    if (newState) {\n      updateState(newState, setState, latestState, timeoutId);\n    }\n  }, [unmountOnExit]);\n\n  const transitState = useCallback(newState => {\n    updateState(newState, setState, latestState, timeoutId);\n\n    switch (newState) {\n      case PRE_ENTER:\n      case PRE_EXIT:\n        timeoutId.current = setTimeout(() => transitState(newState + 1), 0);\n        break;\n      case ENTERING:\n        if (enterTimeout >= 0) timeoutId.current = setTimeout(endTransition, enterTimeout);\n        break;\n      case EXITING:\n        if (exitTimeout >= 0) timeoutId.current = setTimeout(endTransition, exitTimeout);\n        break;\n    }\n  }, [enterTimeout, exitTimeout, endTransition]);\n\n  const transition = useCallback(toEnter => {\n    const enterStage = latestState.current <= ENTERED;\n    if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n\n    if (toEnter) {\n      if (!enterStage) {\n        transitState(enter ? (preState ? PRE_ENTER : ENTERING) : ENTERED);\n      }\n    } else {\n      if (enterStage) {\n        transitState(exit ? (preState ? PRE_EXIT : EXITING) : startOrEnd(unmountOnExit));\n      }\n    }\n  }, [enter, exit, preState, unmountOnExit, transitState]);\n\n  useEffect(() => () => clearTimeout(timeoutId.current), []);\n\n  return [STATES[state], transition, endTransition];\n};\n\nexport { useTransition };\n","import { useState } from 'react';\nimport { useTransition } from 'react-transition-state';\n\nfunction BasicExample() {\n    const [unmountOnExit, setUnmountOnExit] = useState(false);\n    const [state, toggle] = useTransition({\n        timeout: 750,\n        initialEntered: true,\n        preState: true,\n        unmountOnExit\n    });\n\n    return (\n        <div className=\"basic-example\">\n            <div className=\"basic-console\">\n                <div className=\"basic-state\">state: {state}</div>\n                <label>\n                    Unmount after hiding\n                    <input type=\"checkbox\" checked={unmountOnExit}\n                        onChange={e => setUnmountOnExit(e.target.checked)} />\n                </label>\n                <button className=\"btn\" onClick={() => toggle()}>\n                    {state === 'entering' || state === 'entered' ? 'Hide' : 'Show'}\n                </button>\n            </div>\n            {state !== 'unmounted' &&\n                <div className={`basic-transition ${state}`}>React transition state</div>\n            }\n        </div>\n    );\n}\n\nexport default BasicExample;\n","import BasicExample from './components/BasicExample';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasicExample />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}